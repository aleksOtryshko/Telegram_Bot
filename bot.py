import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = "YOUR_BOT_TOKEN"  # –£–∫–∞–∂–∏ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
RESUME_PATH = "resume.pdf"  # –£–∫–∞–∂–∏ –ø—É—Ç—å –∫ —Ä–µ–∑—é–º–µ (—Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω –ª–µ–∂–∞—Ç—å —Ä—è–¥–æ–º —Å bot.py)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ö–Ω–æ–ø–∫–∏ —Å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ (–∑–∞–º–µ–Ω–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–≤–æ–∏)
portfolio_keyboard = InlineKeyboardMarkup().add(
    InlineKeyboardButton("GitHub", url="https://github.com/your_profile"),
    InlineKeyboardButton("–õ–∏—á–Ω—ã–π —Å–∞–π—Ç", url="https://yourwebsite.com"),
    InlineKeyboardButton("–ü—Ä–∏–º–µ—Ä –±–æ—Ç–∞", url="https://t.me/example_bot")
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç.\n\n"
        "üõ† **–ú–æ–∏ –Ω–∞–≤—ã–∫–∏:**\n"
        "- –Ø –º–æ–≥—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫—É Github –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è.\n"
        "- –Ø –º–æ–≥—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫—É –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è.\n"
        "- –Ø –º–æ–≥—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫—É —Å –º–æ–∏–º –∫–æ–¥–æ–º. \n"
    )
    await message.answer(text, reply_markup=portfolio_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /resume (–æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—é–º–µ)
@dp.message_handler(commands=["resume"])
async def send_resume(message: types.Message):
    try:
        with open(RESUME_PATH, "rb") as resume_file:
            await message.answer_document(resume_file, caption="üìÑ –ú–æ–µ —Ä–µ–∑—é–º–µ")
    except FileNotFoundError:
        await message.answer("‚ö†Ô∏è –§–∞–π–ª —Ä–µ–∑—é–º–µ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å –ø—É—Ç—å –≤ RESUME_PATH.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling()

if __name__ == "__main__":
    asyncio.run(main())
